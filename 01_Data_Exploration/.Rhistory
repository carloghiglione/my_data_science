rm(list=ls())
######################################################################################################
#PERMUTATION TEST, TWO INDEPENTEND POPULATIONS
# We sample n1 data from a first population X1
# and n2 data froma second population  X2
# Test:
# H0:  X1 =^d  X2
# H1:  X1 !=^d X2
# Case 1. H0 FALSE
# To understand the behaviour of the test, we sample from two populations
# with different means
# Simulation:   generate data from uniform distribution but different, so H0 false
set.seed(240279)
x1 <- runif(10,0,4)
x2 <- runif(10,0,4)+3
n1 <- length(x1)
n2 <- length(x2)
n <- n1 + n2
x.pool <- c(x1,x2)
# TEST
# Test statistic: absolute difference between the two means
T0 <- abs(mean(x1) - mean(x2))
T0   #it is very far from zero
# Cardinality of the permutational space: (is is incredibly high)
factorial(n)
# Number of distinct values of T*:  (come anagrammi MAMMA)
factorial(n)/(2*factorial(n1)*factorial(n2))
# Minimun achieveable p-value:
1/(factorial(n)/(2*factorial(n1)*factorial(n2)))
# CMC to estimate the p-value
B <- 10000                     # Number of permutations
T_stat <- numeric(B)           # Vector where we will store the values of T*
# To estimate the p-value we use a loop
# Inside the loop, we do the following:
# 1. choose a random permutation of data (with the command sample)
# 2. calculate and save the test statistic obtained with the permuted data
for(i in 1:B){
# permutation:
perm <- sample(1:n)            # generate indexes permutation
x.perm <- x.pool[perm]         # permute pooled data
x1.perm <- x.perm[1:n1]
x2.perm <- x.perm[(n1+1):n]
# test statistic:
T_stat[i] <- abs(mean(x1.perm) - mean(x2.perm))
}
# Permutational distribution of T
x11()
par(mfrow=c(1,2))
hist(T_stat, xlim=range(c(T_stat,T0)), breaks=30)   # density of distribution of Test Statistics
abline(v=T0, col=3, lwd=2)
plot(ecdf(T_stat), xlim=range(c(T_stat,T0)))        # empirical cumulative distribution function of Test Statistics
abline(v=T0, col=3, lwd=2)
# I see the observed values are very extreme wrt all possible extractions of data, so H0 is not plausible
# p-value
p_val <- sum(T_stat>=T0)/B
p_val     # very low, reject H0
setwd("C:/Users/Utente/Desktop/my_data_science/01_Data_Exploration")
install.packages("arules")
data(Groceries)
inspect(head(Groceries, 10))
library(arlues)
library(arules)
data(Groceries)
View(Groceries)
View(Groceries)
inspect(head(Groceries, 10))
View(Groceries)
tab <- Groceries$data
tab <- Groceries@data
View(tab)
Groceries[1]
ap_frequent_itemsets <- apriori(Groceries,
parameter = list (target="frequent itemsets", supp = 0.001, conf = 0.5, maxlen=3)) # maxlen = 3 limits the elements in a rule to 3
inspect(head(ap_frequent_itemsets,10))
